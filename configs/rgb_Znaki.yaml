defaults:
  - _self_
  - paths: default
  - hydra: default


# task name, determines output directory path

task_name: ???

# tags to help you identify your experiments
# you can overwrite this in experiment configs
# overwrite from command line with `python train.py tags="[first_tag, second_tag]"`
tags: []

seed: 10

base:
  img_size: 224
  device: cuda
  csv_path: <path_to_data_csv>
  path_to_data: <path_to_hdfs_file>
  chars_ctc: "_ абвгдежзийклмнопрстуфхцчшщъыьэюяё" # no pad token needed for ctc, only blank + classes
  classes: ${len:${base.chars_ctc}}
  epochs: 60



datamodule:
  _target_: src.data.RGB.datasets.DatsetRUDataModule
  csv_path: ${base.csv_path}
  path_to_data: ${base.path_to_data}
  batch_size: 4
  num_workers: 16
  img_size: ${base.img_size}
  horizontal_flip_prob: 0.5
  temporal_resample_prob: 0.
  rotatation_prob: 0.5


model:
  _target_: src.models.RGB.models.TSM_Resnet
  num_classes: ${base.classes}
  encoder: resnet34
  unidirection: true

  decoder:
    _target_: src.utils.ctc_decoder.Decoder
    labels: ${base.chars_ctc}
    blank_index: 0

  decoder_net:
    _target_: src.models.RGB.models.RNNHead
    input_dim: 1024
    hidden_dim: 1024
    num_layers: 2
    num_classes: ${base.classes}
    bidirectional: true
    return_outs: false


optimizer:
  _target_: torch.optim.AdamW
  lr: 0.0001
  _partial_: true


scheduler:
    _target_: torch.optim.lr_scheduler.MultiStepLR
    milestones: [20, 40]
    gamma: 0.1
    _partial_: True


trainer:
  _target_: src.models.RGB.models.Trainer
  _partial_: true

  loss_fn:
    _target_: torch.nn.CTCLoss
    blank: 0
    zero_infinity: true
    reduction: sum

  device: ${base.device}
  val_every: 1
  path_to_save_weights: <path_to_save_weights>
  get_metric_train: true
  loss_scale: 1
  path_to_states: <path_to_states> # if want to retrain model
  resume_path: <path_to_resume_weights> # if want to continue training


test:
  tester:
    _target_: src.models.RGB.tester.RGBTester

  datamodule:
    _target_: src.data.RGB.datasets.DatsetRUDataModule
    csv_path: ${base.csv_path}
    path_to_data: ${base.path_to_data}
    batch_size: 1
    num_workers: 16
    img_size: ${base.img_size}
    horizontal_flip_prob: 0
    temporal_resample_prob: 0.
    rotatation_prob: 0.
    packed_pad_sequence: ${packed_pad_sequence}

  device: "cuda"
  weights: <path_to_test_weights>
  split: "test"

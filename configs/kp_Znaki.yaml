defaults:
  - _self_
  - paths: default
  - hydra: default



# task name, determines output directory path
task_name: ???
# tags to help you identify your experiments
# you can overwrite this in experiment configs
# overwrite from command line with `python train.py tags="[first_tag, second_tag]"`
tags: []

seed: 10

base:
  device: cuda
  chars_ctc: "_ абвгдежзийклмнопрстуфхцчшщъыьэюяё"
  classes_ctc: ${len:${base.chars_ctc}}
  epochs: 100

datamodule:
  _target_: src.data.KP.Dataset_RDL_KP_Datamodule
  data_folder: <path_to_npys>
  inference_args: <path_to_columns_name_json>
  batch_size: 4
  num_workers: 16
  df: <path_to_df>
  flip_aug: 0.5
  symmetry_fp: <path_to_symmetry_csv>
  tokenizer:
    _target_: src.data.KP.TokenizerRU
    ctc: True
    autoreg: False
  inds_to_filter: ["hand", "pose"]

model:
  _target_: src.models.KP.models.MLP_LSTM_FE
  fe:
    _target_: src.models.KP.models.FeatureMapExtractorModel
    num_keypoints: 54
    out_dim: 144
  mlp:
    _target_: src.models.KP.models.MLP
    input_dim: 144
    hidden_dim: 512
    output_dim: 512
  decoder:
    _target_: src.models.KP.models.RNNHead
    input_dim: 512
    hidden_dim: 512
    num_layers: 2
    num_classes: ${base.classes_ctc}
    bidirectional: true
    return_outs: false

optimizer:
  _target_: torch.optim.AdamW
  lr: 0.0001
  _partial_: true

scheduler:
  _target_: torch.optim.lr_scheduler.MultiStepLR
  milestones: [25, 40]
  gamma: 0.1
  _partial_: true

trainer:
  _target_: src.models.KP.trainers.CTCTrainer
  _partial_: true
  loss_fn:
    _target_: torch.nn.CTCLoss
    blank: ${base.blank_ctc}
    reduction: sum
    zero_infinity: true
  decoder:
    _target_: src.utils.ctc_decoder.Decoder
    labels: ${base.chars_ctc}
    blank_index: 0
  device: ${base.device}
  grad_accumulate: 1.0
  val_every: 1
  path_to_save_weights: <path_to_save_weights>
  get_metric_train: true
  path_to_states: <path_to_states> # if want to retrain model
  resume_path: <path_to_resume_weights> # if want to continue training


test:

  tester:
    _target_: src.models.KP.tester.KPTester
    decoder:
      _target_: src.utils.ctc_decoder.Decoder
      labels: ${base.chars_ctc}
      blank_index: 0

  datamodule:
    _target_: src.data.KP.Dataset_RDL_KP_Datamodule
    data_folder: <path_to_npys>
    inference_args: <path_to_columns_name_json>
    batch_size: 2
    num_workers: 16
    df: <path_to_df>
    flip_aug: 0.5
    symmetry_fp: <path_to_symmetry_csv>
    tokenizer:
      _target_: src.data.KP.TokenizerRU
      ctc: True
      autoreg: False
    inds_to_filter: ["hand", "pose"]


  device: cuda
  weights: <path_to_weigts_to_test>
  split: test
